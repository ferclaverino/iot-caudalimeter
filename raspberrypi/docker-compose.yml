networks:
  default:
    driver: bridge
    ipam:
      driver: default

services:
  grafana:
    depends_on:
      - influxdb
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    user: "0"
    ports:
      - "3000:3000"
    environment:
      - TZ=Etc/UTC
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_LOGS=/var/log/grafana
    volumes:
      - ./volumes/grafana/data:/var/lib/grafana
      - ./volumes/grafana/log:/var/log/grafana
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  influxdb:
    container_name: influxdb
    image: "influxdb:1.8"
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - TZ=Etc/UTC
      - INFLUXDB_HTTP_FLUX_ENABLED=false
      - INFLUXDB_REPORTING_DISABLED=false
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_MONITOR_STORE_ENABLED=FALSE
    # - INFLUX_USERNAME=dba
    # - INFLUX_PASSWORD=supremo
    # - INFLUXDB_UDP_ENABLED=false
    # - INFLUXDB_UDP_BIND_ADDRESS=0.0.0.0:8086
    # - INFLUXDB_UDP_DATABASE=udp
    volumes:
      - ./volumes/influxdb/data:/var/lib/influxdb
      - ./backups/influxdb/db:/var/lib/influxdb/backup
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8086"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nodered:
    container_name: nodered
    depends_on:
      - influxdb
    build:
      context: ./services/nodered/.
      args:
        - DOCKERHUB_TAG=latest
        - EXTRA_PACKAGES=
    restart: unless-stopped
    user: "0"
    environment:
      - TZ=${TZ:-Etc/UTC}
    ports:
      - "1880:1880"
    volumes:
      - ./volumes/nodered/data:/data
      - ./volumes/nodered/ssh:/root/.ssh
      - ./volumes/nodered/sensors:/sensors
      # for using serial port and arduino
      # it doesnÂ´t need to be connected to start container
      - /dev:/dev:ro
    device_cgroup_rules:
      - "c 1:* rw" # access to devices like /dev/null
      - "c 166:* rmw" # change numbers to your device
    # for using serial port and arduino
    # it needs to be connected to start container
    # devices:
    #    - /dev/ttyACM0:/dev/ttyACM0
